<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acm.dao.DepartmentMapper">
	<resultMap id="BaseResultMap" type="com.acm.entity.Department">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="img" jdbcType="VARCHAR" property="img" />
		<result column="is_recruit" jdbcType="INTEGER" property="isRecruit" />
		<result column="power" jdbcType="INTEGER" property="power" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, password, img, is_recruit, power,manageId
	</sql>
	<select id="selectByExample" parameterType="com.acm.entity.DepartmentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from department
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from department
		where id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 根据部门信息模糊查询 -->
	<select id="selectByDept" parameterType="com.acm.entity.Department" resultMap="BaseResultMap">
	    select
		<include refid="Base_Column_List" />
		from department 
		where 1 = 1
		<if test="name!=null">
			and name like"%"#{name}"%"
		</if>
	</select>
	
    <!-- 根据用户id查询出用户加入的部门 和 根据部门名的模糊查询 -->
	<select id="selectByUserIdAndDept" parameterType="Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from department
		where id in (SELECT dept_id FROM user_dept WHERE user_id = #{user.id})
		<if test="dept.name!=null">
			and name like"%"#{dept.name}"%"
		</if>

	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from department
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.acm.entity.DepartmentExample">
		delete from department
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.acm.entity.Department">
		insert into department (id, name, password,
		img, is_recruit, power
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{img,jdbcType=VARCHAR}, #{isRecruit,jdbcType=INTEGER}, #{power,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.acm.entity.Department">
		insert into department
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="isRecruit != null">
				is_recruit,
			</if>
			<if test="power != null">
				power,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="isRecruit != null">
				#{isRecruit,jdbcType=INTEGER},
			</if>
			<if test="power != null">
				#{power,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.acm.entity.DepartmentExample"
		resultType="java.lang.Long">
		select count(*) from department
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update department
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.img != null">
				img = #{record.img,jdbcType=VARCHAR},
			</if>
			<if test="record.isRecruit != null">
				is_recruit = #{record.isRecruit,jdbcType=INTEGER},
			</if>
			<if test="record.power != null">
				power = #{record.power,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update department
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		img = #{record.img,jdbcType=VARCHAR},
		is_recruit = #{record.isRecruit,jdbcType=INTEGER},
		power = #{record.power,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.acm.entity.Department">
		update department
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="isRecruit != null">
				is_recruit = #{isRecruit,jdbcType=INTEGER},
			</if>
			<if test="power != null">
				power = #{power,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.acm.entity.Department">
		update department
		set name = #{name,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		img = #{img,jdbcType=VARCHAR},
		is_recruit = #{isRecruit,jdbcType=INTEGER},
		power = #{power,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>